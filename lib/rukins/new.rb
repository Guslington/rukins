require 'yaml'
require 'fileutils'

module Rukins
  class New

    def initialize(project,options)
      @project = project
      @options = options
    end

    def run
      abort "ERROR: #{@project} already exists" if Dir.exist?(@project)
      puts "INFO: Creating new project #{@project}"
      configs
      templates
      output
      gemfile
      git if @options.git
    end

    def configs
      directory = "#{@project}/config"
      create_directory(directory)

      file = "#{directory}/default_params.yml"
      default_params = {
        'application_name' => @project,
        'dns_domain' => @options.root_dns_zone,
        'source_bucket' => @options.source_bucket,
        'maximum_availability_zones' => 5,
        'accounts' => {
          'ops' =>  @options.ops_account,
          'dev' =>  @options.dev_account,
          'prod' => @options.prod_account
        },
        'EnvironmentType' => {
          'prod' => {
            'Ec2Type' => 't2.small'
          },
          'dev' => {
            'Ec2Type' => 't2.micro'
          }
        },
        'secrets' => {
          'stores' => {
            'dev' => {
              'bucket' => "secrets.dev.#{@options.root_dns_zone}",
              'key' => 'secrets'
            },
            'prod' => {
              'bucket' => "secrets.prod.#{@options.root_dns_zone}",
              'key' => 'secrets'
            }
          }
        }
      }
      create_file(file,default_params.to_yaml.gsub('---','# Generated by Rukins'))
    end
    
    def templates
      directory = "#{@project}/templates"
      create_directory(directory)

      master_template = "#{directory}/master.rb"
      template =  "require 'cfndsl'\n" +
                  "\n" +
                  "CloudFormation do\n" +
                  "  AWSTemplateFormatVersion '2010-09-09'\n" +
                  "  Description \"\#{application_name} Master v\#{cf_version}\"\n" +
                  "\n" +
                  "  Parameter(\"EnvironmentName\") {Type 'String'}\n" +
                  "\n" +
                  "  Resource(\"HostedZone\") {\n" +
                  "    Type 'AWS::Route53::HostedZone'\n" +
                  "    Property('Name', FnJoin('.', [ Ref('EnvironmentName'), dns_domain ]) )\n" +
                  "  }\n" +
                  "\n" +
                  "end\n"
      create_file(master_template,template)
    end

    def output
      directory = "#{@project}/output"
      create_directory(directory)

      gitkeep = "#{directory}/.gitkeep"
      create_file(gitkeep,'')
    end

    def gemfile
      file = "#{@project}/Gemfile"
      gemfile = "source 'https://rubygems.org'\n" + 
                "gem 'cfndsl'\n" +
                "gem 'rukins'\n"
      create_file(file,gemfile)
    end

    def git
      file = "#{@project}/.gitignore"
      gitignore = "output/*\n" +
                  "config/*-ami-*\n"
      create_file(file,gitignore)
      puts "INFO: Initializing git repo and running git flow"
      `cd #{@project} && git init`
      `cd #{@project} && git-flow init -d`
    end

    def create_directory(directory)
      ::FileUtils.mkdir_p(directory)
      puts "    create #{directory}"
    end

    def create_file(file,contents)
      File.open(file, 'w') {|f| f.write contents }
      puts "    create #{file}"
    end
    
  end
end